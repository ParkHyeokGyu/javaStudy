/*
 *	1) 자바에서 제공하는 제어문 : 프로그램에서 필요에 의해 제어
		평문 : 무조건 수행 => 연산자
		조건문 : 필요한 내용만 출력 할때 => 상세보기
			if,switch~case
		반복문 : 같은 내용이 중복이 있는 경우
			for,while,do~while
			for : 반복 횟수가 지정
			while : 반복 횟수가 없는 경우(게임,네트워크서버)
				종료(break),특정부분 제외(continue)
			do~while : 무조건 한번 이상을 수행(for,while문은 조건에 따라 수행을 하지 않을 수 있다)
	-----------------------------------------------
	1) 자바 => 형식, 결과값 확인 => 사용자가 요청한 내용을 도출
	2) 응용 : 사용처, 흐름(동작 순서) => 알고리즘(순서도)
	-----------------------------------------------
	1. 조건문
		단일조건문(독릭적) => ID중복체크,우편번호검색,로그인,상세보기,지도출력
			형식
				if(조건문){ => 조건문은 반드시 true/false
							 부정연산자(!)
							 비교연산자(==,!=,<,>,<=,>=)
							 논리연산자(&&,||)만 사용 가능
					조건이 true일 시 수행
				}
				
			흐름
				조건이 true일 시 수행
				조건이 false일 시 다음 문장 수행
				단일 조건문을 여러개 사용시에는 조건에 맞는 모든 문장을 수행
					1~100 => 3,5,7의 배수(15,21.... 중복되는 값이 있을 경우)
 */
public class 제어문_조건문1 {
	public static void main(String[] args) {
		// 변수 선언 => 데이터관리 => 저장(메모리) => 한개의 데이터 저장
		// 프로그램의 시작 => 데이터저장,연산자,제어문
		int a=15;
		// 3의 배수,5의 배수,7의 배수
		if(a%3==0) // a가 3의 배수인가
			System.out.println(a+"는(은) 3의 배수입니다");
		else if(a%5==0) // 다중조건문을 사용하는 경우 위의 3의배수 조건에 해당하는 문장만 수행 후 if문을 빠져나간다
			System.out.println(a+"는(은) 5의 배수입니다");
		else if(a%7==0)
			System.out.println(a+"는(은) 7의 배수입니다");
	}
}
