/*
 	프로그램(데이터 관리 프로그램)
 		1. 데이터 저장
 			1) 메모리에 저장 => 프로그램 종료시 자동으로 사라진다
 				한개의 데이터 저장
 					읽기(데이터 가지고 오기),쓰기(저장,수정)
 						변수
 							데이터형 변수명;
 							----- -----
 							  ㅣ
 						    메모리 크기(저장할 데이터의 크기)
 						    	기본형(자바에서 제공)
 						    		1byte	2byte	4byte	8byte
 						    		8bit	16bit	32bit	64bit
 						    		
 						    		정수형
 						    		-128~127 => byte
 						    		0~65535 => char
 						    		-21억4천~21억4천 => int(컴퓨터는 모든 숫자를 int형으로 인식)
 						    		---------------- long
 						    		
 						    		실수형
 						    		double 8byte : 실수형의 default
 						    			10.6 => 10.6f(float)
 						    		
 						    		논리형
 						    		boolean true/false
 						    	-------------------------------------
 						    	int a=10; => a는 저장된 위치
 						    	boolean b=true;
 						    		   --- 저장된 위치의 메모리 주소 별칭
 						    	
 						    	크기
 						    		<============== 강제형변환
 						    	byte < char < int < long < double
 						    		==============> 자동형변환
 						    		double a='A' => 65.0(자동형변환)
 						    		int a='A' => 65(자동형변환)
 						    		int a=10.5; => (int)10.5 => 10(강체형변환)
 						    									소수점을 지우고 저장
 						    		
 						    	사용자 정의 데이터형(직접 메모리 크기 설정) => 참조형(메모리 주소를 이용)
 						    		저장위치가 다르다
 						    		저장 장소
 						    			Method Area(메소드,static변수)
 						    			Stack Area(지역변수)
 						    				메모리 자체 관리({} 안에서만 사용 => 블록이 닫히면 사라진다)
 						    			Heap Area(사용자 정의)
 						    				프로그램 종료시까지 유지
 						    				배열,클래스 저장
 						    				메모리 관리를 프로그래머가 한다
 						    				자동 메모리 회수를 이용
 						    					가비지 컬렉션
 						    				메모리 누수 발생
 						    					싱글톤,팩토리...(디자인패턴)
 						상수 => 읽기
 							final 데이터형 상수명;
 				같은 데이터형 어러개 저장
 					배열
 						고정된 데이터
 						연속적인 메모리 구조
 						한개의 이름으로 데이터 여러개를 동시에 제어
 						-------- 반복문을 사용(인덱스)
 				다른 데이터형 여러개 저장
 					클래스 : 사용자 정의 데이터형
 					
 			2) 파일에 저장 => 영구적인 저장
 			   -------- 데이터 노출의 위험(보안 취약성) => 파일끼리 연관관계의 어려움
 			
 			3) 데이터베이스 시스템 : 오라클,MySQL
 		
 		2. 데이터 연산 처리(가공) => 사용자가 요총한 결과값을 만든다
 			1) 연산자
 			2) 제어문
 			3) 기능별 처리 => 메소드(연산자+제어문)
 		-------------------------------------------------- 기능(클래스:객체지향프로그램)
 		3. 테스트 => 오류방지
 				  ------- if,예외처리
 			JUnit(단위 테스트)
 			
 		4. 출력 => Application,WebApplication
 							 ---------------
 							 		ㅣ 2차 자바(웹)
 							 		ㅣ 3차 자바(스프링)
 							 			MyBatis(DB)
 							 			JPA
 							 		
 */
import java.io.*;
import java.util.*;

public class 변수정리 {
	public static void main(String[] args) {
//		File file=new File("");
//		int len=file.length();
		List list=new ArrayList();
		// 배열처럼 크기를 지정하지 않아도 된다
		// 자동으로 크기 조정
		list.add(10);
		// object형을 리턴
		int a=(int)list.get(0);
	}
}
